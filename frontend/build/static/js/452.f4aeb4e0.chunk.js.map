{"version":3,"file":"static/js/452.f4aeb4e0.chunk.js","mappings":"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","sources":["components/WelcomePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './WelcomePage.css';\nimport { useAssessment } from '../context/AssessmentContext';\nimport { APIService } from '../services/api';\n\nconst WelcomePage = () => {\n  const navigate = useNavigate();\n  const { state, loadQuestions } = useAssessment();\n  const [apiStatus, setApiStatus] = useState('checking');\n  const [companyId, setCompanyId] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [showEmployeeId, setShowEmployeeId] = useState(false);\n\n  // Check API status on component mount\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        const isHealthy = await APIService.healthCheck();\n        setApiStatus(isHealthy ? 'online' : 'offline');\n      } catch (error) {\n        console.error('API health check failed:', error);\n        setApiStatus('offline');\n      }\n    };\n\n    checkApiStatus();\n  }, []);\n\n  // Preload questions for both assessment types\n  useEffect(() => {\n    if (apiStatus === 'online') {\n      loadQuestions('Company').catch(console.error);\n      loadQuestions('Employee').catch(console.error);\n    }\n  }, [apiStatus, loadQuestions]);\n\n  const features = [\n    {\n      icon: '🎯',\n      title: 'Comprehensive Assessment',\n      description: 'Evaluate your organization\\'s data and AI readiness across multiple dimensions',\n      highlight: true\n    },\n    {\n      icon: '📊',\n      title: 'Real-time Analytics',\n      description: 'Get instant insights and progress tracking throughout the assessment process'\n    },\n    {\n      icon: '🔒',\n      title: 'Enterprise Security',\n      description: 'Bank-grade security with encrypted data transmission and secure cloud storage'\n    },\n    {\n      icon: '📱',\n      title: 'Multi-device Support',\n      description: 'Access your assessments from any device with automatic sync and save'\n    },\n    {\n      icon: '🔄',\n      title: 'Auto-save Technology',\n      description: 'Never lose your progress with intelligent auto-save every 30 seconds'\n    },\n    {\n      icon: '📈',\n      title: 'Detailed Reporting',\n      description: 'Comprehensive reports with actionable recommendations and benchmarks'\n    }\n  ];\n\n  const assessmentOptions = [\n    {\n      type: 'Company',\n      title: 'Company Assessment',\n      subtitle: 'Organizational Readiness',\n      description: 'Comprehensive evaluation of your organization\\'s data infrastructure, AI capabilities, and digital transformation readiness.',\n      icon: '🏢',\n      color: 'blue',\n      features: [\n        'Data Infrastructure Analysis',\n        'AI/ML Capability Assessment',\n        'Digital Transformation Roadmap',\n        'Governance & Compliance Review',\n        'Technology Stack Evaluation',\n        'Strategic Recommendations'\n      ],\n      estimatedTime: '45-60 minutes'\n    },\n    {\n      type: 'Employee',\n      title: 'Employee Assessment',\n      subtitle: 'Individual Skills & Knowledge',\n      description: 'Evaluate individual employee skills, knowledge gaps, and training needs in data science and AI technologies.',\n      icon: '👤',\n      color: 'green',\n      features: [\n        'Technical Skills Assessment',\n        'Data Literacy Evaluation',\n        'AI/ML Knowledge Testing',\n        'Tool Proficiency Check',\n        'Learning Path Recommendations',\n        'Certification Roadmap'\n      ],\n      estimatedTime: '30-45 minutes'\n    }\n  ];\n\n  const handleStartAssessment = (type) => {\n    if (!companyId.trim()) {\n      alert('Please enter a Company ID to begin the assessment.');\n      return;\n    }\n\n    if (type === 'Employee' && !employeeId.trim()) {\n      alert('Please enter an Employee ID for the employee assessment.');\n      return;\n    }\n\n    // Navigate to the appropriate assessment\n    if (type === 'Company') {\n      navigate(`/company/${encodeURIComponent(companyId.trim())}`);\n    } else {\n      navigate(`/employee/${encodeURIComponent(companyId.trim())}/${encodeURIComponent(employeeId.trim())}`);\n    }\n  };\n\n  const getApiStatusDisplay = () => {\n    switch (apiStatus) {\n      case 'checking':\n        return <span className=\"status-checking\">🔄 Checking connection...</span>;\n      case 'online':\n        return <span className=\"status-online\">🟢 All systems operational</span>;\n      case 'offline':\n        return <span className=\"status-offline\">🔴 Service temporarily unavailable</span>;\n    }\n  };\n\n  return (\n    <div className=\"welcome-page\">\n      {/* Hero Section */}\n      <section className=\"hero-section\">\n        <div className=\"hero-content\">\n          <div className=\"hero-text\">\n            <h1 className=\"hero-title\">\n              DMGT Assessment Platform\n              <span className=\"hero-subtitle\">Data & AI Readiness Evaluation</span>\n            </h1>\n            <p className=\"hero-description\">\n              Transform your organization with comprehensive assessments that evaluate data maturity, \n              AI capabilities, and digital readiness. Get actionable insights to drive your \n              transformation journey forward.\n            </p>\n            <div className=\"hero-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-number\">50+</span>\n                <span className=\"stat-label\">Assessment Categories</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-number\">15min</span>\n                <span className=\"stat-label\">Auto-save Intervals</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-number\">100%</span>\n                <span className=\"stat-label\">Secure & Encrypted</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"hero-visual\">\n            <div className=\"assessment-preview\">\n              <div className=\"preview-header\">\n                <div className=\"preview-dots\">\n                  <span></span><span></span><span></span>\n                </div>\n                <div className=\"preview-title\">Assessment Dashboard</div>\n              </div>\n              <div className=\"preview-content\">\n                <div className=\"preview-chart\">\n                  <div className=\"chart-bar\" style={{ height: '60%' }}></div>\n                  <div className=\"chart-bar\" style={{ height: '80%' }}></div>\n                  <div className=\"chart-bar\" style={{ height: '45%' }}></div>\n                  <div className=\"chart-bar\" style={{ height: '90%' }}></div>\n                </div>\n                <div className=\"preview-metrics\">\n                  <div className=\"metric\">\n                    <span className=\"metric-label\">Progress</span>\n                    <span className=\"metric-value\">87%</span>\n                  </div>\n                  <div className=\"metric\">\n                    <span className=\"metric-label\">Score</span>\n                    <span className=\"metric-value\">A+</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* System Status */}\n      <section className=\"status-section\">\n        <div className=\"status-container\">\n          <div className=\"status-info\">\n            <span className=\"status-label\">System Status:</span>\n            {getApiStatusDisplay()}\n          </div>\n          <div className=\"config-info\">\n            <span className=\"config-label\">Environment:</span>\n            <span className={`env-badge env-${state.config.environment}`}>\n              {state.config.environment.toUpperCase()}\n            </span>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"features-section\">\n        <div className=\"section-header\">\n          <h2>Why Choose DMGT Assessment Platform?</h2>\n          <p>Built for enterprise organizations seeking comprehensive data and AI readiness evaluation</p>\n        </div>\n        <div className=\"features-grid\">\n          {features.map((feature, index) => (\n            <div key={index} className={`feature-card ${feature.highlight ? 'featured' : ''}`}>\n              <div className=\"feature-icon\">{feature.icon}</div>\n              <h3 className=\"feature-title\">{feature.title}</h3>\n              <p className=\"feature-description\">{feature.description}</p>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Assessment Options */}\n      <section className=\"assessments-section\">\n        <div className=\"section-header\">\n          <h2>Start Your Assessment Journey</h2>\n          <p>Choose the assessment type that best fits your evaluation needs</p>\n        </div>\n\n        {/* ID Input Section */}\n        <div className=\"id-input-section\">\n          <div className=\"input-group\">\n            <label htmlFor=\"companyId\" className=\"input-label\">\n              <span className=\"label-text\">Company ID</span>\n              <span className=\"label-required\">*</span>\n            </label>\n            <input\n              id=\"companyId\"\n              type=\"text\"\n              value={companyId}\n              onChange={(e) => setCompanyId(e.target.value)}\n              className=\"id-input\"\n              placeholder=\"Enter your company identifier (e.g., DMGT-2025)\"\n              maxLength={50}\n              required\n            />\n          </div>\n          \n          <div className=\"employee-toggle\">\n            <label className=\"toggle-label\">\n              <input\n                type=\"checkbox\"\n                checked={showEmployeeId}\n                onChange={(e) => setShowEmployeeId(e.target.checked)}\n                className=\"toggle-input\"\n              />\n              <span className=\"toggle-text\">I need to enter an Employee ID for individual assessment</span>\n            </label>\n          </div>\n\n          {showEmployeeId && (\n            <div className=\"input-group\">\n              <label htmlFor=\"employeeId\" className=\"input-label\">\n                <span className=\"label-text\">Employee ID</span>\n                <span className=\"label-required\">*</span>\n              </label>\n              <input\n                id=\"employeeId\"\n                type=\"text\"\n                value={employeeId}\n                onChange={(e) => setEmployeeId(e.target.value)}\n                className=\"id-input\"\n                placeholder=\"Enter employee identifier (e.g., EMP-001)\"\n                maxLength={50}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Assessment Cards */}\n        <div className=\"assessments-grid\">\n          {assessmentOptions.map((option) => (\n            <div key={option.type} className={`assessment-card assessment-${option.color}`}>\n              <div className=\"assessment-header\">\n                <div className=\"assessment-icon\">{option.icon}</div>\n                <div className=\"assessment-titles\">\n                  <h3 className=\"assessment-title\">{option.title}</h3>\n                  <p className=\"assessment-subtitle\">{option.subtitle}</p>\n                </div>\n              </div>\n              \n              <p className=\"assessment-description\">{option.description}</p>\n              \n              <div className=\"assessment-features\">\n                <h4>What's Included:</h4>\n                <ul>\n                  {option.features.map((feature, index) => (\n                    <li key={index}>{feature}</li>\n                  ))}\n                </ul>\n              </div>\n              \n              <div className=\"assessment-meta\">\n                <div className=\"time-estimate\">\n                  <span className=\"time-icon\">⏱️</span>\n                  <span>Estimated time: {option.estimatedTime}</span>\n                </div>\n              </div>\n              \n              <button\n                onClick={() => handleStartAssessment(option.type)}\n                disabled={apiStatus !== 'online' || !companyId.trim() || (option.type === 'Employee' && showEmployeeId && !employeeId.trim())}\n                className={`assessment-button assessment-button-${option.color}`}\n              >\n                {state.loading.questions ? (\n                  <>\n                    <span className=\"button-spinner\">⏳</span>\n                    Loading Questions...\n                  </>\n                ) : (\n                  <>\n                    <span>Start {option.title}</span>\n                    <span className=\"button-arrow\">→</span>\n                  </>\n                )}\n              </button>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Info Section */}\n      <section className=\"info-section\">\n        <div className=\"info-grid\">\n          <div className=\"info-card\">\n            <h3>📋 Before You Begin</h3>\n            <ul>\n              <li>Ensure you have administrative access to relevant systems</li>\n              <li>Gather information about your current data infrastructure</li>\n              <li>Set aside dedicated time for uninterrupted assessment</li>\n              <li>Have relevant documentation and metrics available</li>\n            </ul>\n          </div>\n          \n          <div className=\"info-card\">\n            <h3>💾 Auto-save & Security</h3>\n            <ul>\n              <li>Your progress is automatically saved every 30 seconds</li>\n              <li>All data is encrypted in transit and at rest</li>\n              <li>You can pause and resume assessments at any time</li>\n              <li>No sensitive data is stored in browser memory</li>\n            </ul>\n          </div>\n          \n          <div className=\"info-card\">\n            <h3>📞 Support & Help</h3>\n            <ul>\n              <li>Technical support available during business hours</li>\n              <li>Comprehensive help documentation included</li>\n              <li>Real-time guidance throughout the assessment</li>\n              <li>Export capabilities for further analysis</li>\n            </ul>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default WelcomePage;\n"],"names":["WelcomePage","navigate","useNavigate","state","loadQuestions","useAssessment","apiStatus","setApiStatus","useState","companyId","setCompanyId","employeeId","setEmployeeId","showEmployeeId","setShowEmployeeId","useEffect","async","isHealthy","APIService","healthCheck","error","console","checkApiStatus","catch","_jsxs","className","children","_jsx","style","height","getApiStatusDisplay","concat","config","environment","toUpperCase","icon","title","description","highlight","map","feature","index","htmlFor","id","type","value","onChange","e","target","placeholder","maxLength","required","checked","subtitle","color","features","estimatedTime","option","onClick","handleStartAssessment","trim","encodeURIComponent","alert","disabled","loading","questions","_Fragment"],"sourceRoot":""}